var F=Object.create;var g=Object.defineProperty;var O=Object.getOwnPropertyDescriptor;var x=Object.getOwnPropertyNames;var G=Object.getPrototypeOf,$=Object.prototype.hasOwnProperty;var b=(e,r,s,n)=>{if(r&&typeof r=="object"||typeof r=="function")for(let i of x(r))!$.call(e,i)&&i!==s&&g(e,i,{get:()=>r[i],enumerable:!(n=O(r,i))||n.enumerable});return e};var a=(e,r,s)=>(s=e!=null?F(G(e)):{},b(r||!e||!e.__esModule?g(s,"default",{value:e,enumerable:!0}):s,e));var y=require("url"),t=a(require("@actions/core"),1);var o=a(require("@actions/core"),1),d=a(require("fs"),1),u=require("path"),m=require("chrome-launcher");function P(){let e=o.default.getInput("serverBaseUrl");e||(o.default.setFailed("Need a valid base url."),process.exit(1)),e.substr(-1)!=="/"&&(e+="/");let r=o.default.getInput("destinationPath");r||(o.default.setFailed("Need a valid destination path."),process.exit(1));let s=o.default.getInput("configPath")?(0,u.resolve)(o.default.getInput("configPath")):null;s||(o.default.setFailed("Config file not found or invalid configPath."),process.exit(1));let n=JSON.parse(d.default.readFileSync(s));n.length||(o.default.setFailed("Invalid config."),process.exit(1));let i=m.Launcher.getFirstInstallation(),c=o.default.getInput("sync"),p={};if(c){let w=o.default.getInput("sshPrivateKeyPath"),l=o.default.getInput("sshHost"),C=o.default.getInput("sshPort"),f=o.default.getInput("targetDir");(!l||!f)&&(o.default.setFailed("Invalid ssh options provided."),process.exit(1)),p={sshPrivateKeyPath:w,sshHost:l,sshPort:C,targetDir:f}}return{baseUrl:e,destinationPath:r,paths:n,browserPath:i,shouldSync:c,syncOptions:p}}var v=require("critical"),h=a(require("rsyncwrapper"),1),I=a(require("fs"),1),S=a(require("chrome-launcher"),1),U=async e=>{t.startGroup("Clean up"),I.default.mkdirSync(e.src),(0,h.default)(e,(r,s,n,i)=>{r?(t.error(r),t.error(s),t.error(n),t.error(i),process.exit(1)):(t.info("Rsync cleanup finished"),t.info(s))}),t.endGroup()},D=async e=>{for(let r of e.paths){console.log(r);let s=new y.URL(`${e.baseUrl}${r.url}`),n=e.destinationPath+r.template+"_critical.min.css";t.info(`Generating critical CSS: ${s.href} -> ${n}`);async function i(){return S.launch({chromeFlags:["--headless=new"]})}await(0,v.generate)({src:s.href,target:n,inline:!1,penthouse:{chromeFlags:{}},ignore:[],dimensions:[{width:375,height:667},{width:1440,height:1280}]})}},E=async()=>{t.startGroup("Action config");let e=P();process.env.PUPPETEER_EXECUTABLE_PATH=e.browserPath;let r={src:e.destinationPath,dest:`${e.syncOptions.sshHost}:${e.syncOptions.targetDir}`,args:["-azhcvv"],delete:!0,ssh:!0,port:e.syncOptions.sshPort};e.syncOptions.sshPrivateKeyPath.length&&(r.privateKey=e.syncOptions.sshPrivateKeyPath),t.endGroup(),await U(r),t.startGroup("Start Critical CSS"),await D(e),t.endGroup(),e.shouldSync&&(t.startGroup(`Starting Rsync ${e.destinationPath} -> ${e.syncOptions.targetDir}`),(0,h.default)(r,(s,n,i,c)=>{s?(t.error(s),t.error(n),t.error(i),t.error(c),process.exit(1)):(t.info("Rsync finished"),t.info(n))}),t.endGroup())};E().catch(e=>{t.setFailed(e.message),process.exit(1)}).then(()=>t.debug(`done in ${process.uptime()}s`));
//# sourceMappingURL=index.cjs.map